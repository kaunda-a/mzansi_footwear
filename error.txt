i thought because of my updates of the domain this error would go away https://www.mzansifootwear.co.za/auth/sign-in?callbackUrl=%2F                                  Sign in with Google
Access blocked: This app‚Äôs request is invalid

vibes1890@gmail.com
You can‚Äôt sign in because this app sent an invalid request. You can try again later, or contact the developer about this issue. Learn more about this error
If you are a developer of this app, see error details.
Error 400: redirect_uri_mismatch
ChatGPT said:

Got it ‚úÖ ‚Äî the Google sign-in error you‚Äôre seeing (redirect_uri_mismatch) isn‚Äôt about DNS or your domain being valid.

It‚Äôs about your Google OAuth app configuration.

üîç Why this happens

When you use Google Sign-In, Google checks if the redirect_uri (the callback URL your app is sending) matches exactly with what you‚Äôve set in the Google Cloud Console (OAuth credentials).

Right now, your app is trying to redirect to:

https://www.mzansifootwear.co.za/auth/callback/google


(or something similar, based on your NextAuth/Clerk/Supabase/etc. setup).

But in your Google Cloud settings, you probably only registered:

https://mzansifootwear.vercel.app/auth/callback/google


(or without the www, or only localhost).

So Google rejects it with Error 400: redirect_uri_mismatch.

‚úÖ How to Fix

Go to Google Cloud Console
.

Navigate to:

APIs & Services ‚Üí Credentials ‚Üí OAuth 2.0 Client IDs


Select your OAuth client (the one you use for Google login).

Under Authorized redirect URIs, add all the domains you‚Äôre using, for example:

https://mzansifootwear.co.za/auth/callback/google
https://www.mzansifootwear.co.za/auth/callback/google
https://mzansi-footwear.vercel.app/auth/callback/google   (optional, keep if you used it during dev)
http://localhost:3000/auth/callback/google               (for local dev)


Save changes.

Redeploy / restart your app if needed.

‚ö° Pro tip

Make sure your Authorized domains also include mzansifootwear.co.za and www.mzansifootwear.co.za under OAuth consent screen settings.

Google is very strict ‚Äî the URL must match exactly (https vs http, www vs no-www, trailing slash vs no trailing slash).

üëâ Do you want me to write out the exact callback URL you should use in Google Console for your NextAuth (or whichever auth system you‚Äôre using)? If you tell me which library you‚Äôre using, I can give the precise string.

You said:

URIs 1 
http://localhost:3000
URIs 2 
https://mzansi-footwear.vercel.app
URIs 3 
https://mzansi-footwear.co.za
URIs 4 
https://www.mzansi-footwear.co.za

Authorized redirect URIs
For use with requests from a web server
URIs 1 
http://localhost:3000/api/auth/callback/google
URIs 2 
https://mzansi-footwear.vercel.app/api/auth/callback/google
URIs 3 
https://mzansi-footwear.co.za/api/auth/callback/google
URIs 4 
https://www.mzansi-footwear.co.za/api/auth/callback/google
ChatGPT said:

Perfect üôå thanks for pasting your Authorized redirect URIs and Authorized JavaScript origins.

Looking at what you added:

‚úÖ http://localhost:3000 ‚Üí good for local dev.

‚úÖ https://mzansi-footwear.vercel.app ‚Üí correct for your Vercel preview app.

‚úÖ https://mzansi-footwear.co.za ‚Üí root domain.

‚úÖ https://www.mzansi-footwear.co.za ‚Üí www domain.

And the redirect URIs match each one with /api/auth/callback/google. That‚Äôs exactly what NextAuth.js (and similar auth libraries) expects.

üîç So why are you still getting redirect_uri_mismatch?

The error shows up at:

https://www.mzansifootwear.co.za/auth/sign-in?callbackUrl=%2F


That means:

Your sign-in page is under /auth/sign-in.

When Google redirects back, your app sends a redirect_uri ‚Üí likely to:

https://www.mzansifootwear.co.za/auth/callback/google


(‚ùå notice it‚Äôs missing /api/ in the path).

But in your Google Cloud Console, you only whitelisted:

https://www.mzansifootwear.co.za/api/auth/callback/google

‚úÖ Fix

Check your NextAuth configuration (usually in pages/api/auth/[...nextauth].ts or nextauth.js).

Make sure the Google provider is set correctly:

GoogleProvider({
  clientId: process.env.GOOGLE_CLIENT_ID!,
  clientSecret: process.env.GOOGLE_CLIENT_SECRET!,
})


By default, NextAuth automatically uses /api/auth/callback/google.
If you‚Äôve customized your redirect, you might have accidentally set it to /auth/callback/google.

üîß Steps

Go into your project code and check next-auth.config (or [...nextauth].ts).

Confirm that the callback path is /api/auth/callback/google (not /auth/callback/google).

If your code is already correct, then:

In Google Cloud Console, also add these as fallback redirect URIs:

https://mzansi-footwear.co.za/auth/callback/google
https://www.mzansi-footwear.co.za/auth/callback/google


That way, if something in your app is still generating /auth/callback/google, Google won‚Äôt reject it.

‚ö° My bet: Your app is generating the wrong callback path (/auth/ instead of /api/auth/).

üëâ Do you want me to inspect your NextAuth setup file (the [...nextauth].ts or auth.ts) so I can point to the exact line that needs fixing?

You said:
whats suprisng is that on development it works just fine
ChatGPT said:

Yes üëå that actually makes sense ‚Äî and it‚Äôs a super common trap when going from localhost ‚Üí production with Google OAuth.

Here‚Äôs why it happens:

üîç Why it works on localhost but fails on production

Local dev is stricter but simpler
On http://localhost:3000, NextAuth always calls back to:

http://localhost:3000/api/auth/callback/google


‚Ä¶which matches what you whitelisted in Google Cloud (/api/auth/callback/google).

Production may be generating a different callback
On production (mzansifootwear.co.za or www.mzansifootwear.co.za), something in your NextAuth config or environment variables is causing the callback URL to be:

https://www.mzansifootwear.co.za/auth/callback/google


(missing /api/) ‚Üí which does NOT match Google‚Äôs list.

This mismatch usually comes from one of these:

NEXTAUTH_URL is set incorrectly in your Vercel environment (maybe you set it to https://www.mzansifootwear.co.za/auth instead of just https://www.mzansifootwear.co.za).

A custom pages: { signIn: '/auth/sign-in' } in NextAuth config sometimes tricks people into thinking they need /auth/callback/google, but the callback route is always under /api/auth/callback/google.

‚úÖ Fix in Production

In your Vercel project, go to:

Settings ‚Üí Environment Variables


Make sure you have:

NEXTAUTH_URL = https://www.mzansifootwear.co.za


(‚ö†Ô∏è no /auth at the end).

If you also want to support the www subdomain, either:

Add another env var in Vercel:

NEXTAUTH_URL = https://www.mzansifootwear.co.za


(and set domain alias in Vercel properly),

Or just configure a redirect in Vercel so everything goes to the non-www domain.

Double-check your [...nextauth].ts ‚Äî you don‚Äôt need to hardcode any redirect URL for Google. NextAuth handles it automatically as long as NEXTAUTH_URL is correct.

üëâ So the surprise isn‚Äôt Google being inconsistent ‚Äî it‚Äôs that your local NEXTAUTH_URL is correct but your Vercel one is probably misconfigured.

Do you want me to show you exactly how to set up NEXTAUTH_URL and GOOGLE_CLIENT_ID/SECRET in Vercel so you don‚Äôt have to touch them again?

You said:
NEXTAUTH_URL =https://www.mzansifootwear.co.za
ChatGPT said:

Perfect üëå ‚Äî that‚Äôs the correct value. But since you‚Äôre still getting the /auth/callback/google mismatch, it means something else in production is influencing the redirect.

Let‚Äôs break this down carefully:

‚úÖ Things to check

Check your deployed code on Vercel

In [...nextauth].ts (or wherever you define NextAuth), make sure you haven‚Äôt customized redirect or pages incorrectly.

Example of a correct minimal config:

import NextAuth from "next-auth";
import GoogleProvider from "next-auth/providers/google";

export default NextAuth({
  providers: [
    GoogleProvider({
      clientId: process.env.GOOGLE_CLIENT_ID!,
      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,
    }),
  ],
});


üö´ Wrong would be something like this:

pages: {
  signIn: "/auth/sign-in", // ‚úÖ fine
  // ‚ùå don‚Äôt set callback manually, NextAuth handles this
}


Or:

callbacks: {
  async redirect() {
    return "/auth/callback/google"; // ‚ùå wrong
  }
}


Check your Vercel Environment Variables

In Vercel, under Settings ‚Üí Environment Variables, confirm you set:

NEXTAUTH_URL = https://www.mzansifootwear.co.za


and did not accidentally set NEXTAUTH_URL=https://www.mzansifootwear.co.za/auth.

Make sure no duplicate variables exist (sometimes people add both NEXTAUTH_URL and NEXT_PUBLIC_NEXTAUTH_URL and confuse the config).

Authorized Redirect URIs in Google Cloud

You already have:

https://www.mzansifootwear.co.za/api/auth/callback/google
https://mzansi-footwear.co.za/api/auth/callback/google


‚úÖ That‚Äôs correct.

If your app is still sending /auth/callback/google, you can temporarily add that version too in Google Cloud:

https://www.mzansifootwear.co.za/auth/callback/google


‚Ä¶but this is a patch, not a fix. Ideally, NextAuth should be generating /api/auth/callback/google.

üîß Next Step

Since this works fine on localhost but not on Vercel, it almost certainly means:

Your Vercel env var (NEXTAUTH_URL) isn‚Äôt being applied properly.

Or your NextAuth config has a small override causing the wrong callback path.

üëâ Can you paste your [...nextauth].ts (or wherever you configure NextAuth)? I‚Äôll spot whether the issue is in the config or if it‚Äôs 100% environment-variable related.